openapi: 3.0.3
info:
  title: YumYumNow Delivery
  description: API Specification for YumYumNow Delivery microservice
  version: 1.0.0
servers:
  - url: 'http://localhost:8082'
    description: 'Delivery Microservice'
tags:
  - name: Delivery
    description: Delivery endpoints
  - name: Admin
    description: Admin endpoints
paths:
  /delivery:
    post:
      tags:
        - Delivery
      summary: 'Create a delivery'
      description: 'Create a delivery based on order data.'
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
  /delivery/{id}:
    get:
      tags:
        - Delivery
      summary: 'Get a delivery'
      description: 'Get delivery details based on id.'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery

      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /delivery/{id}/status:
    put:
      tags:
        - Delivery
      summary: 'Update the status of a delivery'
      description: 'Update the status of a delivery. Vendors can set the status to ACCEPTED, REJECTED, PREPARING, GIVEN_TO_COURIER. Couriers can set the status to IN_TRANSIT, DELIVERED.'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"

  /delivery/{id}/location:
    put:
      tags:
        - Delivery
      summary: "Update the location of the delivery"
      description: "Update the current location of the delivery (for couriers)."
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"
                location:
                  $ref: '#/components/schemas/Location'

  /delivery/{id}/time:
    put:
      tags:
        - Delivery
      summary: "Update the delivery time"
      description: "Update estimated delivery time of an existing delivery (for couriers)."
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"
                estimatedNewDeliveryTime:
                  type: string
                  format: date-time
                  example: "2018-11-10T13:49:51.141Z"
  /delivery/{id}/assign:
    put:
      tags:
        - Delivery
      summary: 'Assign the delivery to the courier'
      description: 'The delivery is assigned to a courier.'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"
  /delivery/{id}/rating:
    put:
      tags:
        - Delivery
      summary: 'Specify the order rating'
      description: 'Customers can rate the order on scale from 1 to 5.'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the delivery
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: uuid
                  example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"
                rating:
                  type: integer
                  example: 5

  /delivery/available:
    get:
      tags:
        - Delivery
      summary: 'Get available deliveries in radius'
      description: 'Get available deliveries in radius (for couriers). If a vendor has chosen to only deliver using its own couriers, then deliveries from that vendor will only be returned if the courier is affiliated with that vendor.'
      parameters:
        - in: query
          name: radius
          schema:
            type: number
          required: true
          description: The maximum distance in kilometers
        - in: query
          name: courierId
          schema:
            type: string
            format: uuid
          required: true
          description: The courier ID
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delivery/admin/max-zone:
    put:
      tags:
        - Admin
      summary: 'Set the default maximum delivery zone'
      description: 'Set the default maximum application-wide delivery zone in kilometers for all vendors. This default value is used if a vendor has not specified the delivery zone.'
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              type: number
              example: 2
    get:
      tags:
        - Admin
      summary: 'Get the default maximum delivery zone'
      description: 'Get the default maximum application-wide delivery zone in kilometers for all vendors. This default value is used if a vendor has not specified the delivery zone.'
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: number
                example: 2
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delivery/admin/analytics:
    get:
      tags:
        - Admin
      summary: 'Get delivery system analytics'
      description: 'Get delivery system analytics collected so far.'
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
          required: true
          description: Start date of analytics.
          example: "2018-11-10T13:49:51.141Z"
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
          required: true
          description: End date of analytics.
          example: "2018-11-10T13:49:51.141Z"
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
                properties:
                  startDate:
                    type: string
                    format: date-time
                    example: "2018-11-10T13:49:51.141Z"
                  endDate:
                    type: string
                    format: date-time
                    example: "2018-11-10T13:49:51.141Z"
                  totalDeliveries:
                    type: integer
                    example: 10
                  successfulDeliveries:
                    type: integer
                    example: 5
                  analytics:
                    type: array
                    items:
                      $ref: '#/components/schemas/Analytic'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Analytic:
      type: object
      properties:
        id:
          type: string
          example: "7ddf1042-8dfa-11ee-b9d1-0242ac120002"
        delivery:
          $ref: '#/components/schemas/Delivery'
        preparationTime:
          type: number
          example: 10
        deliveryTime:
          type: number
          example: 10
        driverEfficiency:
          type: integer
          example: 10
        encounteredIssues:
          type: array
          items:
            type: string
            example: "Delivery was late"
    Order:
      type: object
      properties:
        id:
          type: string
          example: "7ddf136c-8dfa-11ee-b9d1-0242ac120002"
        customer:
          $ref: '#/components/schemas/Customer'
        vendor:
          $ref: '#/components/schemas/Vendor'
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "7ddf1830-8dfa-11ee-b9d1-0242ac120002"
        name:
          type: string
          example: "Max Verstappen"
        deliveryAddress:
          type: string
          example: "Mekelweg 5, 2628 CD Delft"
        phone:
          type: string
          example: "+31 71 520 9291"
    Vendor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "7ddf1a10-8dfa-11ee-b9d1-0242ac120002"
        name:
          type: string
          example: "John Smith"
        address:
          type: string
          example: "Professor Schermerhornstraat 19 2628 CN Delft"
        phone:
          type: string
          example: "+31 71 520 9297"
        allowsOnlyOwnCouriers:
          type: boolean
          example: true
        maxDeliveryZoneKm:
          type: number
          example: 2
    Location:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2018-12-10T13:49:51.141Z"
        latitude:
          type: number
          example: 10
        longitude:
          type: number
          example: 20
    Delivery:
      type: object
      properties:
        id:
          type: string
          example: "7ddf1b64-8dfa-11ee-b9d1-0242ac120002"
        orderId:
          type: string
          format: uuid
        courierId:
          type: string
          format: uuid
        vendorId:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - 'PENDING'
            - 'ACCEPTED'
            - 'REJECTED'
            - 'PREPARING'
            - 'GIVEN_TO_COURIER'
            - 'IN_TRANSIT'
            - 'DELIVERED'
          example: 'PREPARING'
        estimatedDeliveryTime:
          type: string
          format: date-time
          example: "2018-11-10T13:49:51.141Z"
        estimatedPreparationFinishTime:
          type: string
          format: date-time
          example: "2018-11-10T13:47:51.141Z"
        currentLocation:
          $ref: '#/components/schemas/Location'
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Not Found"
