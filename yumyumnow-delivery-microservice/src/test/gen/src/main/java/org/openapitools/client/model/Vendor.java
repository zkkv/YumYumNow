/*
 * YumYumNow Delivery API
 * YumYumNow Delivery
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Vendor
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-28T18:44:49.945626+01:00[Europe/Amsterdam]")
public class Vendor {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private Object name = null;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private Object address = null;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private Object phone = null;

  public static final String SERIALIZED_NAME_ALLOWS_ONLY_OWN_COURIERS = "allowsOnlyOwnCouriers";
  @SerializedName(SERIALIZED_NAME_ALLOWS_ONLY_OWN_COURIERS)
  private Object allowsOnlyOwnCouriers = null;

  public static final String SERIALIZED_NAME_MAX_DELIVERY_ZONE_METERS = "maxDeliveryZoneMeters";
  @SerializedName(SERIALIZED_NAME_MAX_DELIVERY_ZONE_METERS)
  private Object maxDeliveryZoneMeters = null;

  public Vendor() {
  }

  public Vendor id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7ddf1a10-8dfa-11ee-b9d1-0242ac120002", value = "")

  public Object getId() {
    return id;
  }


  public void setId(Object id) {
    this.id = id;
  }


  public Vendor name(Object name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Smith", value = "")

  public Object getName() {
    return name;
  }


  public void setName(Object name) {
    this.name = name;
  }


  public Vendor address(Object address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Professor Schermerhornstraat 19 2628 CN Delft", value = "")

  public Object getAddress() {
    return address;
  }


  public void setAddress(Object address) {
    this.address = address;
  }


  public Vendor phone(Object phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+31 71 520 9297", value = "")

  public Object getPhone() {
    return phone;
  }


  public void setPhone(Object phone) {
    this.phone = phone;
  }


  public Vendor allowsOnlyOwnCouriers(Object allowsOnlyOwnCouriers) {
    
    this.allowsOnlyOwnCouriers = allowsOnlyOwnCouriers;
    return this;
  }

   /**
   * Get allowsOnlyOwnCouriers
   * @return allowsOnlyOwnCouriers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Object getAllowsOnlyOwnCouriers() {
    return allowsOnlyOwnCouriers;
  }


  public void setAllowsOnlyOwnCouriers(Object allowsOnlyOwnCouriers) {
    this.allowsOnlyOwnCouriers = allowsOnlyOwnCouriers;
  }


  public Vendor maxDeliveryZoneMeters(Object maxDeliveryZoneMeters) {
    
    this.maxDeliveryZoneMeters = maxDeliveryZoneMeters;
    return this;
  }

   /**
   * Get maxDeliveryZoneMeters
   * @return maxDeliveryZoneMeters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "150", value = "")

  public Object getMaxDeliveryZoneMeters() {
    return maxDeliveryZoneMeters;
  }


  public void setMaxDeliveryZoneMeters(Object maxDeliveryZoneMeters) {
    this.maxDeliveryZoneMeters = maxDeliveryZoneMeters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vendor vendor = (Vendor) o;
    return Objects.equals(this.id, vendor.id) &&
        Objects.equals(this.name, vendor.name) &&
        Objects.equals(this.address, vendor.address) &&
        Objects.equals(this.phone, vendor.phone) &&
        Objects.equals(this.allowsOnlyOwnCouriers, vendor.allowsOnlyOwnCouriers) &&
        Objects.equals(this.maxDeliveryZoneMeters, vendor.maxDeliveryZoneMeters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, address, phone, allowsOnlyOwnCouriers, maxDeliveryZoneMeters);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vendor {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    allowsOnlyOwnCouriers: ").append(toIndentedString(allowsOnlyOwnCouriers)).append("\n");
    sb.append("    maxDeliveryZoneMeters: ").append(toIndentedString(maxDeliveryZoneMeters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("address");
    openapiFields.add("phone");
    openapiFields.add("allowsOnlyOwnCouriers");
    openapiFields.add("maxDeliveryZoneMeters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Vendor
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Vendor.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Vendor is not found in the empty JSON string", Vendor.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Vendor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Vendor` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Vendor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Vendor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Vendor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Vendor.class));

       return (TypeAdapter<T>) new TypeAdapter<Vendor>() {
           @Override
           public void write(JsonWriter out, Vendor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Vendor read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Vendor given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Vendor
  * @throws IOException if the JSON string is invalid with respect to Vendor
  */
  public static Vendor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Vendor.class);
  }

 /**
  * Convert an instance of Vendor to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

